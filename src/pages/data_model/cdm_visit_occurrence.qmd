## VISIT_OCCURRENCE

### source.{source_table} (BRONZE)

Structured data sources for patient spells and attendances will generally include:

| Table                                  | Type            |
|----------------------------------------|-----------------|
| Commissioning Datasets                 | Legacy + Live          |
| Patient information management systems | Legacy + Live          |

Tables are loaded to the database in batches, or through incremental ingestion via connection to a source database.

### bronze.base_ or stg_{source}__{entity} (BRONZE)

Data sources are staged as `stg_{source}__{entity}` (if necessary, with an initial step of `base_{source}__{entity}` prior to unioning). This may include column renaming and edge case handling.

### silver.int_visit_occurrence_spell_episode_grouped (SILVER)

Due to the way that inpatient visits are recorded in commissioning datasets, we map episodes (indicating an episode of care under a consultant or in a particular ward) to spells (an inpatient admission with start date and discharge date).

```{mermaid}
---
title: Visit Occurrence (Spell to Episode Grouped) Lookup Table
---
erDiagram
    int_visit_occurrence_spell_episode_grouped {
        visit_occurrence_uuid uuid "generated for each unique spell"
        patient_uuid uuid "[FK ext_person]"        
        spell_id varchar "completed inpatient spell identifier (1:1 to visit_occurrence_uuid)"
        spell_start_date date
        spell_end_date date
        episode_id varchar "commissioning data episode identifier"
        episode_start_date date
        episode_end_date date
    }
```

### silver.int_visit_occurrence_inpatient (SILVER)

This table contains a UNIONED minimum common dataset for representing completed inpatient admissions (i.e. admission to a bed or space in an inpatient area) and associated information. These may be spells recorded in commissioning datasets, or compelted Epic encounters. 

```{mermaid}
---
title: Visit Occurrence (Inpatient) Intermediate Table
---
erDiagram
    int_visit_occurrence_inpatient {
        visit_occurrence_uuid uuid "[PK] autogenerated identifier"
        person_uuid uuid "[FK ext_person] standardised unique person id"
        visit_start_date date
        visit_start_datetime datetime
        visit_end_date date "where this is available"
        visit_end_datetime datetime
        visit_type varchar "description of admission type"
        visit_source varchar "description of how admission originated"        
        visit_desc varchar "any additional free text qualifier given for this attendance"
        care_site_id "[FK care_site]"
        ...
        source_table_provenance varchar "[NEW] source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
```


### silver.int_visit_occurrence_outpatient (SILVER)

Due to the differences in recording different types of admissions or attendances, these are split. This table contains a UNIONED minimum common dataset for representing outpatient attendances (i.e. attendance to an outpatient area that starts and ends on the same day and does not require overnight admission) and associated information, including referrals pathways and bookings.  

```{mermaid}
---
title: Visit Occurrence (Outpatient) Intermediate Table
---
erDiagram
    int_visit_occurrence_outpatient {
        visit_occurrence_uuid uuid "[PK] autogenerated identifier"
        person_uuid uuid "[FK ext_person] standardised unique person id"
        visit_start_date date
        visit_start_datetime datetime
        visit_end_date date "where this is available"
        visit_end_datetime datetime
        visit_type varchar "broad type, outpatient by default"
        visit_specialty varchar "type of specialty"
        visit_desc varchar "any free text qualifier given for this attendance"
        care_site_id "[FK care_site]"
        referral_source_date date "date which original referral was generated"
        referral_booking_date date "date which referral was converted to booking"



        referral_source varchar "where did referral come from"



        visit_type_concept_id integer "[not null] provenance of record per OMOP"
        provider_id integer "[FK] clinician provider who recorded condition"
        care_site_id integer "[FK] information about care site where visit took place"
        visit_source_value varchar "visit information as represented in source"
        visit_source_concept_id integer "mapping to omop but often left empty"
        admitted_from_concept_id "standard OMOP concept id for source of admission"
        admitted_from_source_value varchar "information as represented in source"
        discharged_to_concept_id integer "standard OMOP concept id for discharge destination"
        discharged_to_source_value varcar "information as represented in source"
        preceding_visit_occurrence_id integer "link to visit that immediate precedes given visit"


        condition_source_value varchar "condition code as represented in source"
        condition_source_value_name varchar "condition name as represented in source"
        domain_id varchar "most relevant omop domain"
        source_vocabulary_id varchar "id of source vocab"
        condition_diagnosis_order integer "used where diagnoses are ordered, e.g. in commissioning data"
        stop_reason varchar "where given"
        visit_occurrence_id integer "[FK ext_visit_occurrence] standardised unique visit id"
        source_table_provenance varchar "[NEW] source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
```



### silver.int_visit_occurrence_spells, silver.int_visit_occurrence_spell_episodes (SILVER)




Different data sources are UNIONED into a minimum common dataset for representing the occurrence of conditions, and attached, relevant qualifiers. This table does not contain data from specialty systems such as cancer, which may have additional diagnostic qualifiers.

Diagnosis codes are attached to a particular patient. Patients must first be assigned a `person_uuid`, which is given to the relevant diagnosis in this intermediate stage.

Diagnosis codes may be attached to a particular hospital admission or attendance. These `spells` or `attendances` must first be assigned a `visit_occurrence_id`, which is given to the relevant diagnosis. 

```{mermaid}
---
title: Condition Occurrence Intermediate Table
---
erDiagram
    int_condition_occurrence {
        condition_occurrence_id integer "[PK] autogenerated identifier"
        person_uuid uuid "[FK ext_person] standardised unique person id"
        condition_start_date date
        condition_start_datetime datetime
        condition_end_date date
        condition_end_datetime datetime        
        condition_source_value varchar "condition code as represented in source"
        condition_source_value_name varchar "condition name as represented in source"
        domain_id varchar "most relevant omop domain"
        source_vocabulary_id varchar "id of source vocab"
        condition_diagnosis_order integer "used where diagnoses are ordered, e.g. in commissioning data"
        stop_reason varchar "where given"
        visit_occurrence_id integer "[FK ext_visit_occurrence] standardised unique visit id"
        source_table_provenance varchar "[NEW] source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
```

### silver.ext_condition_occurrence (SILVER)

This is the transformed version of ingested condition tables.  Concepts in this table are mapped to OMOP standards, and column naming is compatible, but it contains the following differences:

- Standardised concept codes/names are surfaced, and indexed, to enable user-friendly exploration and visualisation without the need for large joins;
- OMOP CDM 5.4 columns that are not relevant to the NHS, or to intended purposes, are excluded. When converting to vanilla OMOP, these columns remain empty;
- Source, table, and systems provenance are maintained;
- Systems source is mapped to `condition_type_concept_id` per OMOP.

```{mermaid}
---
title: OMOP_EXT Condition Occurrence
---
erDiagram
    ext_condition_occurrence {
        condition_occurrence_id integer "[PK] autogenerated identifier"
        person_uuid uuid "[FK ext_person] standardised unique person id"
        condition_start_date date
        condition_start_datetime timestamp
        condition_end_date date
        condition_end_datetime timestamp
        condition_concept_id integer "OMOP standard concept id"
        condition_concept_code varchar "OMOP standard concept code"
        condition_concept_name varchar "OMOP standard concept name"
        vocabulary_id varchar "OMOP standard vocabulary"
        condition_type_concept_id integer "OMOP provenance/type of condition" 
        condition_type_concept_name integer "OMOP provenance/type of condition as text"                          
        condition_diagnosis_order integer "used where diagnoses are ordered, e.g. in commissioning data"
        stop_reason varchar "where given"
        visit_occurrence_id integer "[FK ext_visit_occurrence] standardised unique visit id"
        condition_source_value varchar "condition code as represented in source"
        condition_source_value_name varchar "condition name as represented in source"        
        source_table_provenance varchar "source table name"
        source_row_id uuid "unique row id for the single concept that is generated at ingestion"
    }
```

### omop.visit_occurrence (GOLD, OMOP CDM 5.4)

This table contains Events where Persons engage with the healthcare system for a duration of time. They are often also called “Encounters”. This may include any type of interaction, including inpatient / outpatient / remote. These are described using visit_concept_id, found (here)[https://athena.ohdsi.org/search-terms/terms?domain=Visit&standardConcept=Standard&page=1&pageSize=15&query=]

```{mermaid}
---
title: OMOP Visit Occurrence
---
erDiagram
    visit_occurrence {
        visit_occurrence_id integer "[PK not null] autogenerated identifier"
        person_id integer "[FK not null]"
        visit_concept_id integer "[not null] standard OMOP concept id representing kind of visit"
        visit_start_date date "[not null]"
        visit_start_datetime timestamp
        visit_end_date date
        visit_end_datetime timestamp
        visit_type_concept_id integer "[not null] provenance of record per OMOP"
        provider_id integer "[FK] clinician provider who recorded condition"
        care_site_id integer "[FK] information about care site where visit took place"
        visit_source_value varchar "visit information as represented in source"
        visit_source_concept_id integer "mapping to omop but often left empty"
        admitted_from_concept_id "standard OMOP concept id for source of admission"
        admitted_from_source_value varchar "information as represented in source"
        discharged_to_concept_id integer "standard OMOP concept id for discharge destination"
        discharged_to_source_value varcar "information as represented in source"
        preceding_visit_occurrence_id integer "link to visit that immediate precedes given visit"
    }
```

### ADDITIONAL NOTES

None for now!

### OUTSTANDING ISSUES

None for now!
